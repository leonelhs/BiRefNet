# This config file was generated by:
# https://github.com/ZhengPeng7/BiRefNet/blob/main/tutorials/BiRefNet_pth2onnx.ipynb

import torch

import deform_conv2d_onnx_exporter
from models.birefnet import BiRefNet
from utils import check_state_dict

def convert_to_onnx(net, file_name='output.onnx', input_shape=(1024, 1024)):
    input = torch.randn(1, 3, input_shape[0], input_shape[1]).to("cpu")

    input_layer_names = ['input_image']
    output_layer_names = ['output_image']

    torch.onnx.export(
        net,
        input,
        file_name,
        verbose=False,
        opset_version=17,
        input_names=input_layer_names,
        output_names=output_layer_names,
    )

#Fixme we dont kow all resolutions for all models
weights_files = {
    # 'General': {'file':'BiRefNet', 'resolution':(1024, 1024)},
    # 'General-HR': {'file':'BiRefNet_HR', 'resolution':(2048, 2048)},
    # 'Matting-HR': {'file':'BiRefNet_HR-matting', 'resolution':(2048, 2048)},
    # 'Matting': {'file':'BiRefNet-matting', 'resolution':(1024, 1024)},
    # 'Portrait': {'file':'BiRefNet-portrait', 'resolution':(1024, 1024)},
    # 'General-reso_512': {'file':'BiRefNet_512x512', 'resolution':(512, 512)},
    # 'General-Lite': {'file':'BiRefNet_lite', 'resolution':(1024, 1024)},
    # 'General-Lite-2K': {'file':'BiRefNet_lite-2K', 'resolution':(2560, 1440)},
    # # 'Anime-Lite': 'BiRefNet_lite-Anime',
    # 'DIS': {'file':'BiRefNet-DIS5K', 'resolution':(1024, 1024)},
    # 'HRSOD': {'file':'BiRefNet-HRSOD', 'resolution':(1024, 1024)},
    # 'COD': {'file':'BiRefNet-COD', 'resolution':(1024, 1024)},
    # 'DIS-TR_TEs': {'file':'BiRefNet-DIS5K-TR_TEs', 'resolution':(1024, 1024)},
    # 'General-legacy': {'file':'BiRefNet-legacy', 'resolution':(1024, 1024)},
    # 'General-dynamic': {'file':'BiRefNet_dynamic', 'resolution':(1024, 1024)},
    # 'Matting-dynamic': {'file':'BiRefNet_dynamic-matting', 'resolution':(1024, 1024)},
}

if __name__ == "__main__":
    for k in weights_files:
        weights_file = f'./checkpoints/pth/{weights_files[k]['file']}.pth'
        device = 'cpu'

        birefnet = BiRefNet(bb_pretrained=False)
        state_dict = torch.load(weights_file, map_location=device)
        state_dict = check_state_dict(state_dict)
        birefnet.load_state_dict(state_dict)

        torch.set_float32_matmul_precision('high')

        birefnet.to(device)
        birefnet.eval()


        # register deform_conv2d operator
        deform_conv2d_onnx_exporter.register_deform_conv2d_onnx_op()

        try:
            convert_to_onnx(birefnet,
                            weights_file.replace('.pth', '.onnx'),
                            input_shape=weights_files[k]['resolution'])
        except:
            print(f"Not able to convert {weights_file}")
